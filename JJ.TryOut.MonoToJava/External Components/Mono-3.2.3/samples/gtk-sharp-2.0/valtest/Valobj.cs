// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gtksharp {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class Valobj : GLib.Object {

		[Obsolete]
		protected Valobj(GLib.GType gtype) : base(gtype) {}
		public Valobj(IntPtr raw) : base(raw) {}

		[DllImport("libvalobj.dll")]
		static extern IntPtr gtksharp_valobj_new();

		public Valobj () : base (IntPtr.Zero)
		{
			if (GetType () != typeof (Valobj)) {
				CreateNativeObject (new string [0], new GLib.Value[0]);
				return;
			}
			Raw = gtksharp_valobj_new();
		}

		[GLib.Property ("double_prop")]
		public double DoubleProp {
			get {
				GLib.Value val = GetProperty ("double_prop");
				double ret = (double) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("double_prop", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("boxed_prop")]
		public Gdk.Rectangle BoxedProp {
			get {
				GLib.Value val = GetProperty ("boxed_prop");
				Gdk.Rectangle ret = (Gdk.Rectangle) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = (GLib.Value) value;
				SetProperty("boxed_prop", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("uint64_prop")]
		public ulong Uint64Prop {
			get {
				GLib.Value val = GetProperty ("uint64_prop");
				ulong ret = (ulong) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("uint64_prop", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("uint_prop")]
		public uint UintProp {
			get {
				GLib.Value val = GetProperty ("uint_prop");
				uint ret = (uint) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("uint_prop", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("flags_prop")]
		public Gtk.AttachOptions FlagsProp {
			get {
				GLib.Value val = GetProperty ("flags_prop");
				Gtk.AttachOptions ret = (Gtk.AttachOptions) (Enum) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value((Enum) value);
				SetProperty("flags_prop", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("unichar_prop")]
		public char UnicharProp {
			get {
				GLib.Value val = GetProperty ("unichar_prop");
				char ret = (char) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("unichar_prop", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("string_prop")]
		public string StringProp {
			get {
				GLib.Value val = GetProperty ("string_prop");
				string ret = (string) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("string_prop", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("pointer_prop")]
		public IntPtr PointerProp {
			get {
				GLib.Value val = GetProperty ("pointer_prop");
				IntPtr ret = (IntPtr) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("pointer_prop", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("float_prop")]
		public float FloatProp {
			get {
				GLib.Value val = GetProperty ("float_prop");
				float ret = (float) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("float_prop", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("enum_prop")]
		public Gtk.ArrowType EnumProp {
			get {
				GLib.Value val = GetProperty ("enum_prop");
				Gtk.ArrowType ret = (Gtk.ArrowType) (Enum) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value((Enum) value);
				SetProperty("enum_prop", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("int_prop")]
		public int IntProp {
			get {
				GLib.Value val = GetProperty ("int_prop");
				int ret = (int) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("int_prop", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("boolean_prop")]
		public bool BooleanProp {
			get {
				GLib.Value val = GetProperty ("boolean_prop");
				bool ret = (bool) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("boolean_prop", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("object_prop")]
		public Gtk.Widget ObjectProp {
			get {
				GLib.Value val = GetProperty ("object_prop");
				Gtk.Widget ret = (Gtk.Widget) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("object_prop", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("int64_prop")]
		public long Int64Prop {
			get {
				GLib.Value val = GetProperty ("int64_prop");
				long ret = (long) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("int64_prop", val);
				val.Dispose ();
			}
		}

		[DllImport("libvalobj.dll")]
		static extern int gtksharp_valobj_get_flags(IntPtr raw);

		[DllImport("libvalobj.dll")]
		static extern void gtksharp_valobj_set_flags(IntPtr raw, int val);

		public Gtk.AttachOptions Flags { 
			get {
				int raw_ret = gtksharp_valobj_get_flags(Handle);
				Gtk.AttachOptions ret = (Gtk.AttachOptions) raw_ret;
				return ret;
			}
			set {
				gtksharp_valobj_set_flags(Handle, (int) value);
			}
		}

		[DllImport("libvalobj.dll")]
		static extern IntPtr gtksharp_valobj_get_pointer(IntPtr raw);

		[DllImport("libvalobj.dll")]
		static extern void gtksharp_valobj_set_pointer(IntPtr raw, IntPtr val);

		public IntPtr Pointer { 
			get {
				IntPtr raw_ret = gtksharp_valobj_get_pointer(Handle);
				IntPtr ret = raw_ret;
				return ret;
			}
			set {
				gtksharp_valobj_set_pointer(Handle, value);
			}
		}

		[DllImport("libvalobj.dll")]
		static extern long gtksharp_valobj_get_int64(IntPtr raw);

		[DllImport("libvalobj.dll")]
		static extern void gtksharp_valobj_set_int64(IntPtr raw, long val);

		public long Int64 { 
			get {
				long raw_ret = gtksharp_valobj_get_int64(Handle);
				long ret = raw_ret;
				return ret;
			}
			set {
				gtksharp_valobj_set_int64(Handle, value);
			}
		}

		[DllImport("libvalobj.dll")]
		static extern bool gtksharp_valobj_get_boolean(IntPtr raw);

		[DllImport("libvalobj.dll")]
		static extern void gtksharp_valobj_set_boolean(IntPtr raw, bool val);

		public bool Boolean { 
			get {
				bool raw_ret = gtksharp_valobj_get_boolean(Handle);
				bool ret = raw_ret;
				return ret;
			}
			set {
				gtksharp_valobj_set_boolean(Handle, value);
			}
		}

		[DllImport("libvalobj.dll")]
		static extern uint gtksharp_valobj_get_uint(IntPtr raw);

		[DllImport("libvalobj.dll")]
		static extern void gtksharp_valobj_set_uint(IntPtr raw, uint val);

		public uint Uint { 
			get {
				uint raw_ret = gtksharp_valobj_get_uint(Handle);
				uint ret = raw_ret;
				return ret;
			}
			set {
				gtksharp_valobj_set_uint(Handle, value);
			}
		}

		[DllImport("libvalobj.dll")]
		static extern float gtksharp_valobj_get_float(IntPtr raw);

		[DllImport("libvalobj.dll")]
		static extern void gtksharp_valobj_set_float(IntPtr raw, float val);

		public float Float { 
			get {
				float raw_ret = gtksharp_valobj_get_float(Handle);
				float ret = raw_ret;
				return ret;
			}
			set {
				gtksharp_valobj_set_float(Handle, value);
			}
		}

		[DllImport("libvalobj.dll")]
		static extern IntPtr gtksharp_valobj_get_object(IntPtr raw);

		[DllImport("libvalobj.dll")]
		static extern void gtksharp_valobj_set_object(IntPtr raw, IntPtr val);

		public Gtk.Widget Object { 
			get {
				IntPtr raw_ret = gtksharp_valobj_get_object(Handle);
				Gtk.Widget ret = GLib.Object.GetObject(raw_ret) as Gtk.Widget;
				return ret;
			}
			set {
				gtksharp_valobj_set_object(Handle, value == null ? IntPtr.Zero : value.Handle);
			}
		}

		[DllImport("libvalobj.dll")]
		static extern IntPtr gtksharp_valobj_get_boxed(IntPtr raw);

		[DllImport("libvalobj.dll")]
		static extern void gtksharp_valobj_set_boxed(IntPtr raw, IntPtr value);

		public Gdk.Rectangle Boxed { 
			get {
				IntPtr raw_ret = gtksharp_valobj_get_boxed(Handle);
				Gdk.Rectangle ret = Gdk.Rectangle.New (raw_ret);
				return ret;
			}
			set {
				IntPtr native_value = GLib.Marshaller.StructureToPtrAlloc (value);
				gtksharp_valobj_set_boxed(Handle, native_value);
				value = Gdk.Rectangle.New (native_value);
				Marshal.FreeHGlobal (native_value);
			}
		}

		[DllImport("libvalobj.dll")]
		static extern uint gtksharp_valobj_get_unichar(IntPtr raw);

		[DllImport("libvalobj.dll")]
		static extern void gtksharp_valobj_set_unichar(IntPtr raw, uint val);

		public char Unichar { 
			get {
				uint raw_ret = gtksharp_valobj_get_unichar(Handle);
				char ret = GLib.Marshaller.GUnicharToChar (raw_ret);
				return ret;
			}
			set {
				gtksharp_valobj_set_unichar(Handle, GLib.Marshaller.CharToGUnichar (value));
			}
		}

		[DllImport("libvalobj.dll")]
		static extern double gtksharp_valobj_get_double(IntPtr raw);

		[DllImport("libvalobj.dll")]
		static extern void gtksharp_valobj_set_double(IntPtr raw, double val);

		public double Double { 
			get {
				double raw_ret = gtksharp_valobj_get_double(Handle);
				double ret = raw_ret;
				return ret;
			}
			set {
				gtksharp_valobj_set_double(Handle, value);
			}
		}

		[DllImport("libvalobj.dll")]
		static extern IntPtr gtksharp_valobj_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = gtksharp_valobj_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("libvalobj.dll")]
		static extern ulong gtksharp_valobj_get_uint64(IntPtr raw);

		[DllImport("libvalobj.dll")]
		static extern void gtksharp_valobj_set_uint64(IntPtr raw, ulong val);

		public ulong Uint64 { 
			get {
				ulong raw_ret = gtksharp_valobj_get_uint64(Handle);
				ulong ret = raw_ret;
				return ret;
			}
			set {
				gtksharp_valobj_set_uint64(Handle, value);
			}
		}

		[DllImport("libvalobj.dll")]
		static extern IntPtr gtksharp_valobj_get_string(IntPtr raw);

		[DllImport("libvalobj.dll")]
		static extern void gtksharp_valobj_set_string(IntPtr raw, IntPtr val);

		public string String { 
			get {
				IntPtr raw_ret = gtksharp_valobj_get_string(Handle);
				string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
				return ret;
			}
			set {
				IntPtr native_value = GLib.Marshaller.StringToPtrGStrdup (value);
				gtksharp_valobj_set_string(Handle, native_value);
				GLib.Marshaller.Free (native_value);
			}
		}

		[DllImport("libvalobj.dll")]
		static extern int gtksharp_valobj_get_int(IntPtr raw);

		[DllImport("libvalobj.dll")]
		static extern void gtksharp_valobj_set_int(IntPtr raw, int val);

		public int Int { 
			get {
				int raw_ret = gtksharp_valobj_get_int(Handle);
				int ret = raw_ret;
				return ret;
			}
			set {
				gtksharp_valobj_set_int(Handle, value);
			}
		}

		[DllImport("libvalobj.dll")]
		static extern int gtksharp_valobj_get_enum(IntPtr raw);

		[DllImport("libvalobj.dll")]
		static extern void gtksharp_valobj_set_enum(IntPtr raw, int val);

		public Gtk.ArrowType Enum { 
			get {
				int raw_ret = gtksharp_valobj_get_enum(Handle);
				Gtk.ArrowType ret = (Gtk.ArrowType) raw_ret;
				return ret;
			}
			set {
				gtksharp_valobj_set_enum(Handle, (int) value);
			}
		}

#endregion
	}
}
